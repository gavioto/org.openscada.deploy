/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.openscada.deploy.iolist.model.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.openscada.deploy.iolist.model.util.ModelAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class ModelItemProviderAdapterFactory extends ModelAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable
{
    /**
     * This keeps track of the root adapter factory that delegates to this adapter factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ComposedAdapterFactory parentAdapterFactory;

    /**
     * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected IChangeNotifier changeNotifier = new ChangeNotifier ();

    /**
     * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected Collection<Object> supportedTypes = new ArrayList<Object> ();

    /**
     * This constructs an instance.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public ModelItemProviderAdapterFactory ()
    {
        supportedTypes.add ( IEditingDomainItemProvider.class );
        supportedTypes.add ( IStructuredItemContentProvider.class );
        supportedTypes.add ( ITreeItemContentProvider.class );
        supportedTypes.add ( IItemLabelProvider.class );
        supportedTypes.add ( IItemPropertySource.class );
    }

    /**
     * This keeps track of the one adapter used for all {@link org.openscada.deploy.iolist.model.Item} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ItemItemProvider itemItemProvider;

    /**
     * This creates an adapter for a {@link org.openscada.deploy.iolist.model.Item}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createItemAdapter ()
    {
        if ( itemItemProvider == null )
        {
            itemItemProvider = new ItemItemProvider ( this );
        }

        return itemItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.openscada.deploy.iolist.model.HierarchySummaryGroup} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected HierarchySummaryGroupItemProvider hierarchySummaryGroupItemProvider;

    /**
     * This creates an adapter for a {@link org.openscada.deploy.iolist.model.HierarchySummaryGroup}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createHierarchySummaryGroupAdapter ()
    {
        if ( hierarchySummaryGroupItemProvider == null )
        {
            hierarchySummaryGroupItemProvider = new HierarchySummaryGroupItemProvider ( this );
        }

        return hierarchySummaryGroupItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.openscada.deploy.iolist.model.FormulaItem} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected FormulaItemItemProvider formulaItemItemProvider;

    /**
     * This creates an adapter for a {@link org.openscada.deploy.iolist.model.FormulaItem}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createFormulaItemAdapter ()
    {
        if ( formulaItemItemProvider == null )
        {
            formulaItemItemProvider = new FormulaItemItemProvider ( this );
        }

        return formulaItemItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.openscada.deploy.iolist.model.FormulaInput} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected FormulaInputItemProvider formulaInputItemProvider;

    /**
     * This creates an adapter for a {@link org.openscada.deploy.iolist.model.FormulaInput}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createFormulaInputAdapter ()
    {
        if ( formulaInputItemProvider == null )
        {
            formulaInputItemProvider = new FormulaInputItemProvider ( this );
        }

        return formulaInputItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.openscada.deploy.iolist.model.ScriptModule} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ScriptModuleItemProvider scriptModuleItemProvider;

    /**
     * This creates an adapter for a {@link org.openscada.deploy.iolist.model.ScriptModule}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createScriptModuleAdapter ()
    {
        if ( scriptModuleItemProvider == null )
        {
            scriptModuleItemProvider = new ScriptModuleItemProvider ( this );
        }

        return scriptModuleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.openscada.deploy.iolist.model.Model} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ModelItemProvider modelItemProvider;

    /**
     * This creates an adapter for a {@link org.openscada.deploy.iolist.model.Model}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createModelAdapter ()
    {
        if ( modelItemProvider == null )
        {
            modelItemProvider = new ModelItemProvider ( this );
        }

        return modelItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.openscada.deploy.iolist.model.ScriptItem} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ScriptItemItemProvider scriptItemItemProvider;

    /**
     * This creates an adapter for a {@link org.openscada.deploy.iolist.model.ScriptItem}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createScriptItemAdapter ()
    {
        if ( scriptItemItemProvider == null )
        {
            scriptItemItemProvider = new ScriptItemItemProvider ( this );
        }

        return scriptItemItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.openscada.deploy.iolist.model.ScriptOutput} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ScriptOutputItemProvider scriptOutputItemProvider;

    /**
     * This creates an adapter for a {@link org.openscada.deploy.iolist.model.ScriptOutput}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createScriptOutputAdapter ()
    {
        if ( scriptOutputItemProvider == null )
        {
            scriptOutputItemProvider = new ScriptOutputItemProvider ( this );
        }

        return scriptOutputItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.openscada.deploy.iolist.model.Mapper} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected MapperItemProvider mapperItemProvider;

    /**
     * This creates an adapter for a {@link org.openscada.deploy.iolist.model.Mapper}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createMapperAdapter ()
    {
        if ( mapperItemProvider == null )
        {
            mapperItemProvider = new MapperItemProvider ( this );
        }

        return mapperItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.openscada.deploy.iolist.model.LevelMonitor} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LevelMonitorItemProvider levelMonitorItemProvider;

    /**
     * This creates an adapter for a {@link org.openscada.deploy.iolist.model.LevelMonitor}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLevelMonitorAdapter ()
    {
        if ( levelMonitorItemProvider == null )
        {
            levelMonitorItemProvider = new LevelMonitorItemProvider ( this );
        }

        return levelMonitorItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.openscada.deploy.iolist.model.ListMonitor} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ListMonitorItemProvider listMonitorItemProvider;

    /**
     * This creates an adapter for a {@link org.openscada.deploy.iolist.model.ListMonitor}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createListMonitorAdapter ()
    {
        if ( listMonitorItemProvider == null )
        {
            listMonitorItemProvider = new ListMonitorItemProvider ( this );
        }

        return listMonitorItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.openscada.deploy.iolist.model.BooleanMonitor} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected BooleanMonitorItemProvider booleanMonitorItemProvider;

    /**
     * This creates an adapter for a {@link org.openscada.deploy.iolist.model.BooleanMonitor}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createBooleanMonitorAdapter ()
    {
        if ( booleanMonitorItemProvider == null )
        {
            booleanMonitorItemProvider = new BooleanMonitorItemProvider ( this );
        }

        return booleanMonitorItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.openscada.deploy.iolist.model.Average} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AverageItemProvider averageItemProvider;

    /**
     * This creates an adapter for a {@link org.openscada.deploy.iolist.model.Average}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAverageAdapter ()
    {
        if ( averageItemProvider == null )
        {
            averageItemProvider = new AverageItemProvider ( this );
        }

        return averageItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.openscada.deploy.iolist.model.AverageItem} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AverageItemItemProvider averageItemItemProvider;

    /**
     * This creates an adapter for a {@link org.openscada.deploy.iolist.model.AverageItem}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAverageItemAdapter ()
    {
        if ( averageItemItemProvider == null )
        {
            averageItemItemProvider = new AverageItemItemProvider ( this );
        }

        return averageItemItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.openscada.deploy.iolist.model.ConstantItem} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ConstantItemItemProvider constantItemItemProvider;

    /**
     * This creates an adapter for a {@link org.openscada.deploy.iolist.model.ConstantItem}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createConstantItemAdapter ()
    {
        if ( constantItemItemProvider == null )
        {
            constantItemItemProvider = new ConstantItemItemProvider ( this );
        }

        return constantItemItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.openscada.deploy.iolist.model.MovingAverageItem} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected MovingAverageItemItemProvider movingAverageItemItemProvider;

    /**
     * This creates an adapter for a {@link org.openscada.deploy.iolist.model.MovingAverageItem}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createMovingAverageItemAdapter ()
    {
        if ( movingAverageItemItemProvider == null )
        {
            movingAverageItemItemProvider = new MovingAverageItemItemProvider ( this );
        }

        return movingAverageItemItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.openscada.deploy.iolist.model.MovingAverage} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected MovingAverageItemProvider movingAverageItemProvider;

    /**
     * This creates an adapter for a {@link org.openscada.deploy.iolist.model.MovingAverage}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createMovingAverageAdapter ()
    {
        if ( movingAverageItemProvider == null )
        {
            movingAverageItemProvider = new MovingAverageItemProvider ( this );
        }

        return movingAverageItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.openscada.deploy.iolist.model.ListMonitorEntry} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ListMonitorEntryItemProvider listMonitorEntryItemProvider;

    /**
     * This creates an adapter for a {@link org.openscada.deploy.iolist.model.ListMonitorEntry}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createListMonitorEntryAdapter ()
    {
        if ( listMonitorEntryItemProvider == null )
        {
            listMonitorEntryItemProvider = new ListMonitorEntryItemProvider ( this );
        }

        return listMonitorEntryItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.openscada.deploy.iolist.model.WeakSummaryReference} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected WeakSummaryReferenceItemProvider weakSummaryReferenceItemProvider;

    /**
     * This creates an adapter for a {@link org.openscada.deploy.iolist.model.WeakSummaryReference}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createWeakSummaryReferenceAdapter ()
    {
        if ( weakSummaryReferenceItemProvider == null )
        {
            weakSummaryReferenceItemProvider = new WeakSummaryReferenceItemProvider ( this );
        }

        return weakSummaryReferenceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.openscada.deploy.iolist.model.PlainSummaryGroup} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PlainSummaryGroupItemProvider plainSummaryGroupItemProvider;

    /**
     * This creates an adapter for a {@link org.openscada.deploy.iolist.model.PlainSummaryGroup}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPlainSummaryGroupAdapter ()
    {
        if ( plainSummaryGroupItemProvider == null )
        {
            plainSummaryGroupItemProvider = new PlainSummaryGroupItemProvider ( this );
        }

        return plainSummaryGroupItemProvider;
    }

    /**
     * This returns the root adapter factory that contains this factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public ComposeableAdapterFactory getRootAdapterFactory ()
    {
        return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory ();
    }

    /**
     * This sets the composed adapter factory that contains this factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void setParentAdapterFactory ( ComposedAdapterFactory parentAdapterFactory )
    {
        this.parentAdapterFactory = parentAdapterFactory;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public boolean isFactoryForType ( Object type )
    {
        return supportedTypes.contains ( type ) || super.isFactoryForType ( type );
    }

    /**
     * This implementation substitutes the factory itself as the key for the adapter.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter adapt ( Notifier notifier, Object type )
    {
        return super.adapt ( notifier, this );
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Object adapt ( Object object, Object type )
    {
        if ( isFactoryForType ( type ) )
        {
            Object adapter = super.adapt ( object, type );
            if ( ! ( type instanceof Class<?> ) || ( ( (Class<?>)type ).isInstance ( adapter ) ) )
            {
                return adapter;
            }
        }

        return null;
    }

    /**
     * This adds a listener.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void addListener ( INotifyChangedListener notifyChangedListener )
    {
        changeNotifier.addListener ( notifyChangedListener );
    }

    /**
     * This removes a listener.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void removeListener ( INotifyChangedListener notifyChangedListener )
    {
        changeNotifier.removeListener ( notifyChangedListener );
    }

    /**
     * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void fireNotifyChanged ( Notification notification )
    {
        changeNotifier.fireNotifyChanged ( notification );

        if ( parentAdapterFactory != null )
        {
            parentAdapterFactory.fireNotifyChanged ( notification );
        }
    }

    /**
     * This disposes all of the item providers created by this factory. 
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void dispose ()
    {
        if ( itemItemProvider != null )
            itemItemProvider.dispose ();
        if ( hierarchySummaryGroupItemProvider != null )
            hierarchySummaryGroupItemProvider.dispose ();
        if ( formulaItemItemProvider != null )
            formulaItemItemProvider.dispose ();
        if ( formulaInputItemProvider != null )
            formulaInputItemProvider.dispose ();
        if ( scriptModuleItemProvider != null )
            scriptModuleItemProvider.dispose ();
        if ( modelItemProvider != null )
            modelItemProvider.dispose ();
        if ( scriptItemItemProvider != null )
            scriptItemItemProvider.dispose ();
        if ( scriptOutputItemProvider != null )
            scriptOutputItemProvider.dispose ();
        if ( mapperItemProvider != null )
            mapperItemProvider.dispose ();
        if ( levelMonitorItemProvider != null )
            levelMonitorItemProvider.dispose ();
        if ( listMonitorItemProvider != null )
            listMonitorItemProvider.dispose ();
        if ( booleanMonitorItemProvider != null )
            booleanMonitorItemProvider.dispose ();
        if ( averageItemProvider != null )
            averageItemProvider.dispose ();
        if ( averageItemItemProvider != null )
            averageItemItemProvider.dispose ();
        if ( constantItemItemProvider != null )
            constantItemItemProvider.dispose ();
        if ( movingAverageItemItemProvider != null )
            movingAverageItemItemProvider.dispose ();
        if ( movingAverageItemProvider != null )
            movingAverageItemProvider.dispose ();
        if ( listMonitorEntryItemProvider != null )
            listMonitorEntryItemProvider.dispose ();
        if ( weakSummaryReferenceItemProvider != null )
            weakSummaryReferenceItemProvider.dispose ();
        if ( plainSummaryGroupItemProvider != null )
            plainSummaryGroupItemProvider.dispose ();
    }

}
